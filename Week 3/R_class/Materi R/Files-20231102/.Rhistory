# Vektor dengan nama-nama personel BTS
personel_BTS <- c("RM", "Jin", "SUGA", "j-hope", "Jimin", "V", "Jungkook")
# Vektor dengan deret 1-100 dengan interval 2
deret <- seq(1, 100, by = 2)
#########################################################
### Vektor dengan nama-nama personel BTS
personel_BTS <- c("RM", "Jin", "SUGA", "j-hope", "Jimin", "V", "Jungkook")
### Vektor dengan deret 1-100 dengan interval 2
deret <- seq(1, 100, by = 2)
### Membuka file 'lowbwt.csv'
data_lowbwt <- read.csv("lowbwt.csv")
library(ggplot)
library(ggplot2)
getwd()
setwd("~/Documents/Materi R/Files-20231102")
pets <- read.csv("pets.csv")
View(pets)
plot(x = pets$pet)
plot(x = pets$pet, y = pets$score)
library(patchwork)
library(plotly)
library(ggwordcloud)
library(reprores)
plot(x = pets$pet, y = pets$score)
install.packages("patchwork")
install.packages("plotly")
install.packages("ggwordcloud")
pets <- read.csv("pets.csv")
plot(x = pets$pet, y = pets$score)
pets <- read.csv("pets.csv")
View(pets)
pets <- read_csv("https://psyteachr.github.io/reprores/data/pets.csv", col_types = "cffiid")
pets <- read.csv("https://psyteachr.github.io/reprores/data/pets.csv", col_types = "cffiid")
pets <- read.csv("pets.csv")
plot(x = pets$pet, y = pets$score)
# Step 3: Create Data
x <- 1:10  # A simple vector from 1 to 10 for the x-axis
y <- x^2   # Squares of x for the y-axis values
# Step 4: Plot Data
plot(x, y, type = 'p',    # 'p' for points, other options include 'l' for lines, 'b' for both, etc.
main = "Example Plot",  # Title of the plot
xlab = "X Axis",     # Label for the x-axis
ylab = "Y Axis",     # Label for the y-axis
col = "blue")        # Color of the points
plot(x = pets$pet, y = pets$score)
# Simulate sales data for different stores
set.seed(123) # For reproducible results
store <- factor(rep(c("Store A", "Store B", "Store C"), each = 10)) # Categorical variable
sales <- rnorm(30, mean = 100, sd = 20) # Continuous variable, simulating sales amounts
# Viewing the first few rows of the data
head(data.frame(store, sales))
# Simulate sales data for different stores
set.seed(123) # For reproducible results
store <- factor(rep(c("Store A", "Store B", "Store C"), each = 10)) # Categorical variable
sales <- rnorm(30, mean = 100, sd = 20) # Continuous variable, simulating sales amounts
# Viewing the first few rows of the data
head(data.frame(store, sales))
# Calculate mean sales by store
mean_sales <- tapply(sales, store, mean)
# Viewing the mean sales
mean_sales
# Creating a bar plot of mean sales by store
barplot(mean_sales,
main = "Average Sales by Store",
xlab = "Store",
ylab = "Average Sales",
col = "skyblue",
border = "black")
hist(pets$score, breaks = 20)
plot(x = pets$age, y = pets$weight)
plot(x = pets$pet, y = pets$score)
class(pets$petx)
class(pets$pet)
as.factor(pets$pet)
plot(x = pets$pet, y = pets$score)
class(pets$pet)
# Bar Plot
ggplot(pets, aes(pet)) +
geom_bar()
# Bar Plot
ggplot(pets, aes(country)) +
geom_bar()
# Bar Plot
ggplot(pets, aes(pets)) +
geom_bar()
# Bar Plot
ggplot(pets, aes(pet)) +
geom_bar()
ggplot(pets, aes(score)) +
geom_density()
ggplot(pets, aes(score, fill = pet)) +
geom_density(alpha = 0.5)
ggplot(pets, aes(score, fill = country)) +
geom_density(alpha = 0.5)
ggplot(pets, aes(score, fill = pet)) +
geom_density(alpha = 0.5)
ggplot(pets, aes(weight, fill = pet)) +
geom_density(alpha = 0.5)
ggplot(pets, aes(age, fill = pet)) +
geom_density(alpha = 0.5)
ggplot(pets, aes(score, color = pet)) +
geom_freqpoly(binwidth = 5)
ggplot(pets, aes(age)) +
geom_histogram(binwidth = 5, fill = "white", color = "black")
ggplot(pets, aes(weight)) +
geom_histogram(binwidth = 5, fill = "white", color = "black")
ggplot(pets, aes(score)) +
geom_histogram(binwidth = 5, fill = "white", color = "black")
ggplot(pets, aes(score, fill=pet)) +
geom_histogram(binwidth = 5, alpha = 0.5,
position = "dodge")
ggplot(pets, aes(score)) +
geom_histogram(binwidth = 5, fill = "white", color = "black")
ggplot(pets, aes(score)) +
geom_histogram(binwidth = 5, fill = "red", color = "blue")
ggplot(pets, aes(score)) +
geom_histogram(binwidth = 5, fill = "blue", color = "black")
ggplot(pets, aes(score)) +
geom_histogram(binwidth = 5, fill = "blue", color = "red")
ggplot(pets, aes(score)) +
geom_histogram()
ggplot(pets, aes(score)) +
geom_histogram(binwidth = 5)
ggplot(pets, aes(score)) +
geom_histogram(binwidth = 10)
ggplot(pets, aes(score)) +
geom_histogram(binwidth = 2)
ggplot(pets, aes(score)) +
geom_histogram(binwidth = 1)
ggplot(pets, aes(score)) +
geom_histogram(binwidth = 5)
ggplot(pets, aes(score)) +
geom_histogram(binwidth = 5, fill = "white", color = "black")
ggplot(pets, aes(score, fill=pet)) +
geom_histogram(binwidth = 5, alpha = 0.5,
position = "dodge")
?ggplot
?position
??position
ggplot(pets, aes(pet, score, fill=pet)) +
stat_summary(fun = mean, geom = "col", alpha = 0.5) +
stat_summary(fun.data = mean_se, geom = "errorbar",
width = 0.25) +
coord_cartesian(ylim = c(80, 120))
ggplot(pets, aes(pet, score, fill=pet)) +
geom_violin(draw_quantiles = .5,
trim = FALSE, alpha = 0.5,)
ggplot(pets, aes(pet, weight, fill = pet)) +
geom_boxplot()
ggplot(pets, aes(pet, score, fill = pet)) +
geom_boxplot()
### Scatter Plot
ggplot(pets, aes(age, score, color = pet)) +
geom_point() +
geom_smooth()
### Scatter Plot
ggplot(pets, aes(age, score, color = pet)) +
geom_point()
### Scatter Plot
ggplot(pets, aes(age, score, color = pet)) +
geom_point() +
geom_smooth()
### Scatter Plot
ggplot(pets, aes(age, score, color = pet)) +
geom_point() +
geom_smooth(formula = y ~ x, method="lm"))
### Scatter Plot
ggplot(pets, aes(age, score, color = pet)) +
geom_point() +
geom_smooth(formula = y ~ x, method="lm")
### Scatter Plot
ggplot(pets, aes(age, score, color = pet)) +
geom_point() +
geom_smooth()
### Scatter Plot
ggplot(pets, aes(age, score, color = pet)) +
geom_point() +
geom_smooth(formula = y ~ x, method="lm")
